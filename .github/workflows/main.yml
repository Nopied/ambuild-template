name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            os_short: win
            compiler_cc: msvc
          - os: ubuntu-latest
            os_short: linux
            compiler_cc: clang
            compiler_cxx: clang++
          - os: ubuntu-18.04
            os_short: linux
            compiler_cc: clang-8
            compiler_cxx: clang++-8
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.compiler_cc }}
    env:
      ARCH: x86,x86_64
      CODESPACE_VSCODE_FOLDER: ${{ github.workspace }}
      
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-python@v2
        name: Setup Python 3.8
        with:
          python-version: 3.8
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          
      - name: Install Linux dependencies
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev ${{ matrix.compiler_cc }}
            
      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version
          
      - name: Build
        shell: bash
        run: |
          cd $CODESPACE_VSCODE_FOLDER
          
          mkdir ambuild
          git clone https://github.com/alliedmodders/ambuild
          pip install ./ambuild
          
          mkdir build && cd build
          python ../configure.py
          ambuild
          
      - name: Upload
        uses: actions/upload-artifact@master
        with:
          name: Compiled
          path: ${{ github.workspace }}/build
